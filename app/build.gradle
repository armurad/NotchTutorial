buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
}

apply plugin: 'com.android.application'

project.ext.modelAssetsDir = new File((File) project.buildDir, '../src/main/assets')


android {
    compileSdkVersion 26
    buildToolsVersion '27.0.3'

    flavorDimensions 'default'

    defaultConfig {
        applicationId 'com.wearnotch.notchdemo.tutorial'
        minSdkVersion 19
        targetSdkVersion 26
        versionCode 9
        versionName '1.8'

        multiDexEnabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        debug {
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/DEPENDENCIES'
    }

    lintOptions {
        abortOnError false
    }
}
configurations {
    appConfig
}
dependencies {
    compile 'com.notch.sdk:sdk-android:1.1.333'
    implementation 'com.notch.sdk:sdk-android:1.1.355'
    appConfig 'com.notch.sdk:sdk-android:1.1.355'

    compile 'com.android.support:support-v4:26.1.0'
    compile 'com.android.support:recyclerview-v7:26.1.0'
    compile 'com.android.support:appcompat-v7:26.1.0'
    compile 'com.android.support:cardview-v7:26.1.0'
    compile 'com.android.support:design:26.1.0'
    compile 'org.greenrobot:eventbus:3.0.0'

    compile 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    compile 'com.android.support:multidex:1.0.2'
    compile 'com.afollestad.material-dialogs:core:0.9.0.1'

    compile fileTree(dir: 'libs', include: ['*.jar'])
}

task convertObj(type: JavaExec) {
    ext.srcFile1 = file('../model/equipment_tutorial.obj')
    ext.srcFile2 = file('../model/equipment_tutorial.js')
    inputs.files files(srcFile1,srcFile2)
    outputs.dir project.modelAssetsDir
    main = 'com.wearnotch.visualiserutil.ObjConverter'
    classpath = configurations.appConfig
    args = [ srcFile1.getAbsolutePath(), srcFile2.getAbsolutePath(),
             new File((File) project.modelAssetsDir, 'equipment.dat').getAbsolutePath() ]
}
task convertMtl(type: JavaExec) {
    ext.srcFile = file('../model/equipment_tutorial.mtl')
    inputs.file srcFile
    outputs.dir project.modelAssetsDir
    main = 'com.wearnotch.visualiserutil.MtlConverter'
    classpath = configurations.appConfig
    args = [ srcFile.getAbsolutePath(),
             new File((File) project.modelAssetsDir, 'equipment_mtl.dat').getAbsolutePath() ]
}
project.afterEvaluate {
    project.tasks.findAll {
        it.name.startsWith('generate') && it.name.endsWith('Assets')
    }.each {
        it.dependsOn convertObj
        it.dependsOn convertMtl
    }
}

